{"version":3,"sources":["components/InputBar.js","components/TaskItem.js","components/TaskList.js","components/Header.js","components/FilterMenu.js","components/App.js","index.js"],"names":["InputBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","setState","className","style","marginTop","marginLeft","marginRight","backgroundColor","this","type","value","onChange","e","target","placeholder","React","Component","buttonConfig","done","color","text","pending","TaskItem","isDone","isEditMode","task","content","onClickStatus","isDoneChange","id","console","log","onClickDeleteButton","onClick","onClickEditButton","onSubmitUpdate","componentDidMount","editWindowRendering","marginBottom","date_created","TaskList","tasks","map","key","length","Header","FilterMenu","isFilterClick","onClickFilterButton","onClickAllTasks","filterTasks","onClickPendingTasks","onClickDoneTasks","menuRender","taskId","App","tasksToDisplay","onNewTaskSubmit","newTask","moment","Date","format","temp","push","onClickDelete","newTasks","filter","newContent","forEach","cat","pendingTasks","doneTasks","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.0fb2c901.chunk.js","sourcesContent":["import './InputBar.css';\r\nimport React from 'react';\r\n\r\nclass InputBar extends React.Component {\r\n    state = { term: '' };\r\n    \r\n\r\n    onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        \r\n        this.props.onSubmit(this.state.term);\r\n        this.setState({ term: '' });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"input-bar ui segment\" style={{marginTop: '10px', marginLeft: 'auto', marginRight: 'auto', backgroundColor: 'black'}}>\r\n                <form className=\"ui form\" onSubmit={this.onFormSubmit}>\r\n                    <div className=\"field\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={this.state.term}\r\n                            onChange={e => this.setState({ term: e.target.value})}\r\n                            placeholder=\"Type new task...\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default InputBar;","import './TaskItem.css';\r\nimport React from 'react';\r\n\r\n\r\nconst buttonConfig = {\r\n    done: {\r\n        color: 'green',\r\n        text: 'DONE'\r\n    },\r\n    pending: {\r\n        color: 'red',\r\n        text: 'PENDING'\r\n    }\r\n};\r\n\r\n\r\nclass TaskItem extends React.Component {\r\n    state = { \r\n        isDone: false,\r\n        color: 'red',\r\n        text: 'PENDING',\r\n        isEditMode: false,\r\n        term: this.props.task.content \r\n    };\r\n\r\n    onClickStatus = (event) => {\r\n        //await this.setState({isDone: !this.state.isDone});\r\n        this.props.isDoneChange(this.props.task.id);\r\n        console.log(this.props.task.isDone);\r\n        const { color, text } = buttonConfig[this.props.task.isDone ? 'done' : 'pending'];\r\n        this.setState({ color, text });\r\n    };\r\n\r\n    onClickDeleteButton = (event) => {\r\n        this.props.onClick(this.props.task.id);\r\n    };\r\n\r\n    onClickEditButton = () => {\r\n        this.setState({isEditMode: !this.state.isEditMode});\r\n       \r\n    };\r\n\r\n    onSubmitUpdate = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.props.task.id, this.state.term);\r\n        this.setState({isEditMode: !this.state.isEditMode});\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        const { color, text } = buttonConfig[this.props.task.isDone ? 'done' : 'pending'];\r\n        this.setState({ color, text });\r\n    };\r\n\r\n    editWindowRendering = () => {\r\n        if(this.state.isEditMode) {\r\n            return (\r\n                <form onSubmit={this.onSubmitUpdate}>\r\n                <div className=\"edit-input ui input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={this.state.term}\r\n                        onChange={e => this.setState({ term: e.target.value})}\r\n                    />\r\n                </div>\r\n                </form>\r\n            );\r\n        } else {\r\n            return <div className=\"header\" style={{marginBottom: '10px'}}>{this.props.task.content}</div>\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"item-box item\" style={{marginBottom: '0px'}} >\r\n                <div className=\"content\">\r\n                    {this.editWindowRendering()}\r\n                    {this.props.task.date_created}\r\n                    \r\n                </div>\r\n                <div className=\"buttons\" >\r\n                    <button className={`button-status ui inverted ${this.state.color} button`} onClick={this.onClickStatus} >{this.state.text}</button>\r\n                    <button className=\"ui icon button\" onClick={this.onClickEditButton} ><i className=\"black edit outline icon\"></i></button>\r\n                    <button className=\"ui icon button\" onClick={this.onClickDeleteButton} ><i className=\"black trash alternate outline icon\"></i></button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default TaskItem;\r\n","import './TaskList.css';\r\nimport React from 'react';\r\nimport TaskItem from './TaskItem';\r\n\r\n\r\n\r\nconst TaskList = props => {\r\n    console.log(props);\r\n    const tasks = props.tasks.map((task) => {\r\n        return (\r\n            <TaskItem\r\n                task={task}\r\n                key={task.id}\r\n                onClick={props.onClick}\r\n                onSubmit={props.onSubmit}\r\n                isDoneChange={props.isDoneChange}\r\n            />\r\n        );\r\n    });\r\n\r\n    const renderTasks = () => {\r\n        console.log(props.tasks);\r\n        if(props.tasks.length !== 0) return tasks;\r\n        \r\n        return 'Relax! You have nothing to do right now.'\r\n    }\r\n\r\n    return (\r\n        <div className=\"task-list ui inverted segment\" style={{marginLeft: 'auto', marginRight: 'auto'}}>\r\n            <div className=\"ui inverted relaxed divided list\">\r\n                {renderTasks()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskList;\r\n","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h2 className=\"ui center aligned icon header\" style={{ marginTop: '5px'}} >\r\n            <i className=\"circular tasks icon\"></i>\r\n                YOUR TO DO LIST\r\n        </h2>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './FilterMenu.css';\r\n\r\nclass FilterMenu extends React.Component {\r\n    state = { isFilterClick: false };\r\n\r\n    onClickFilterButton = () => {\r\n        this.setState({ isFilterClick: !this.state.isFilterClick });\r\n    };\r\n\r\n    onClickAllTasks = () => {\r\n        this.props.filterTasks('all');\r\n        this.setState({ isFilterClick: !this.state.isFilterClick });\r\n    };\r\n\r\n    onClickPendingTasks = () => {\r\n        this.props.filterTasks('pending');\r\n        this.setState({ isFilterClick: !this.state.isFilterClick });\r\n    };\r\n\r\n    onClickDoneTasks = () => {\r\n        this.props.filterTasks('done');\r\n        this.setState({ isFilterClick: !this.state.isFilterClick });\r\n    };\r\n\r\n    menuRender = () => {\r\n        if(this.state.isFilterClick) {\r\n            return (\r\n                <div className=\"filter-menu ui inverted vertical menu\">\r\n                    <a className=\"item\" onClick={this.onClickAllTasks}>ALL</a>\r\n                    <a className=\"item\" onClick={this.onClickPendingTasks}>PENDING</a>\r\n                    <a className=\"item\" onClick={this.onClickDoneTasks}>DONE</a>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"filter-button\">\r\n                    <button className=\"ui icon button\" onClick={this.onClickFilterButton} >\r\n                        <i className=\"filter icon\"></i>\r\n                    </button>\r\n                </div>\r\n                {this.menuRender()}\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default FilterMenu;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport InputBar from './InputBar';\r\nimport TaskList from './TaskList';\r\nimport Header from './Header';\r\nimport FilterMenu from './FilterMenu';\r\n\r\n\r\nlet taskId = null;\r\n\r\n\r\nclass App extends React.Component {\r\n    state = { \r\n        tasks: [],\r\n        tasksToDisplay: []\r\n    };\r\n\r\n    onNewTaskSubmit = (term) => {\r\n        taskId = taskId + 1;\r\n\r\n        const newTask = {\r\n            id: taskId,\r\n            content: term,\r\n            isDone: false,\r\n            date_created: moment(new Date()).format('lll')\r\n        };\r\n\r\n        let temp = this.state.tasks;\r\n        temp.push(newTask);\r\n        this.setState({ tasks: temp, tasksToDisplay: temp });\r\n    };\r\n\r\n    onClickDelete = (id)=> {\r\n        const oldTasks = this.state.tasks;\r\n        const newTasks = oldTasks.filter(task => task.id !== id);\r\n        this.setState({ tasks: newTasks, tasksToDisplay: newTasks });\r\n    };\r\n\r\n    onSubmitUpdate = (id, newContent) => {\r\n        const tasks = this.state.tasks;\r\n        tasks.forEach(task => { if(task.id === id) { \r\n            task.content = newContent;\r\n        }} );\r\n        \r\n        this.setState({ tasks: tasks }); \r\n    };\r\n\r\n    isDoneChange = (id) => {\r\n        const tasks = this.state.tasks;\r\n        tasks.forEach(task => {\r\n            if(task.id === id) {task.isDone =!task.isDone};\r\n        });\r\n        this.setState({ tasks: tasks });\r\n    };\r\n\r\n    filterTasks = (cat) => {\r\n        switch(cat) {\r\n            case 'all':\r\n                this.setState({ tasksToDisplay: this.state.tasks });\r\n                break;\r\n            case 'pending':\r\n                const tasks = this.state.tasks;\r\n                const pendingTasks = tasks.filter(task => task.isDone === false);\r\n                this.setState({ tasksToDisplay: pendingTasks });\r\n                console.log(this.state);\r\n                break;\r\n            case 'done':\r\n                const temp = this.state.tasks;\r\n                const doneTasks = temp.filter(task => task.isDone === true);\r\n                this.setState({ tasksToDisplay: doneTasks });\r\n                break;\r\n        };\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <FilterMenu filterTasks={this.filterTasks} />\r\n                <InputBar onSubmit={this.onNewTaskSubmit} />\r\n                <TaskList\r\n                    tasks={this.state.tasksToDisplay}\r\n                    onClick={this.onClickDelete}\r\n                    onSubmit={this.onSubmitUpdate}\r\n                    isDoneChange={this.isDoneChange}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}