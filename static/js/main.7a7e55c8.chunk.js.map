{"version":3,"sources":["apis/tasks.js","history.js","actions/index.js","actions/type.js","components/InputForm.js","components/InputBar.js","components/TaskItem.js","components/Header.js","components/TaskListDone.js","components/TaskListPending.js","components/GoogleAuth.js","components/Menu.js","components/TaskList.js","components/LoginPage.js","components/FilterMenu.js","components/Modal.js","components/TaskDelete.js","components/App.js","reducers/authReducer.js","reducers/tasksReducer.js","reducers/index.js","reducers/menuReducer.js","reducers/navReducer.js","index.js"],"names":["axios","create","baseURL","createBrowserHistory","setNavFlag","nav","type","payload","fetchTasks","userId","dispatch","a","tasks","get","response","console","log","data","InputForm","onFormSubmit","formValues","props","onSubmit","renderInput","input","className","style","marginTop","marginLeft","marginRight","backgroundColor","handleSubmit","placeholder","this","Field","name","component","React","Component","reduxForm","form","InputBar","newTask","content","isDone","create_date","moment","Date","format","addTask","connect","state","auth","task","post","buttonConfig","done","color","text","pending","TaskItem","isEditMode","onClickStatus","event","editedTask","editTask","_id","onClickDeleteButton","onClick","id","onClickEditButton","setState","onSubmitUpdate","preventDefault","term","editWindowRendering","initialValues","marginBottom","to","con","taskId","put","Header","TaskListDone","conf","length","map","key","Fragment","renderTasks","Object","values","menu","TaskListPending","GoogleAuth","onAuthChange","isSignedIn","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","menuConfig","clicked","visible","dimmed","notClicked","Menu","onMenuClick","nr","toggleMenu","renderList","match","params","TaskList","LoginPage","history","push","renderLoginPage","Modal","ReactDOM","createPortal","onDismiss","e","stopPropagation","title","actions","document","querySelector","TaskDelete","deleteTask","renderActions","delete","App","path","exact","combineReducers","action","_","mapKeys","omit","formReducer","plugin","inputForm","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.7a7e55c8.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst urlJSON = 'http://localhost:3001';\r\nconst urlExpress = 'http://localhost:8000';\r\nconst urlHeroku = ' https://arcane-headland-69370.herokuapp.com/'\r\n\r\nexport default axios.create({\r\n    baseURL: urlHeroku\r\n});","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import { SIGN_IN, SIGN_OUT, ADD_TASK, LOAD_TASKS, EDIT_TASK, DELETE_TASK, TOGGLE_MENU, NAV_PAGE } from \"./type\"\r\nimport tasks from \"../apis/tasks\";\r\nimport history from '../history';\r\n\r\nexport const signIn = (userId) => {\r\n    return {\r\n        type: SIGN_IN,\r\n        payload: userId\r\n    };\r\n};\r\n\r\nexport const signOut = () => {\r\n    return {\r\n        type: SIGN_OUT\r\n    };\r\n    \r\n};\r\n\r\nexport const toggleMenu = () => {\r\n    return {\r\n        type: TOGGLE_MENU\r\n    };\r\n};\r\n\r\nexport const setNavFlag = (nav) => {\r\n    return {\r\n        type: NAV_PAGE,\r\n        payload: nav\r\n    };\r\n};\r\n\r\nexport const editTask = (taskId, editedTask) => async (dispatch) => {\r\n    const response = await tasks.put(`/tasks/${taskId}`, editedTask)\r\n    \r\n    dispatch({\r\n        type: EDIT_TASK,\r\n        payload: response.data\r\n    });\r\n};\r\n\r\nexport const addTask = (task) => async (dispatch) => {\r\n    const response = await tasks.post('/tasks', task);\r\n    console.log(response);\r\n    dispatch({\r\n        type: ADD_TASK,\r\n        payload: response.data\r\n    });\r\n};\r\n\r\nexport const fetchTasks = (userId) => async (dispatch) => {\r\n    const response = await tasks.get(`/tasks/${userId}`);\r\n    console.log(response);\r\n    dispatch({\r\n        type: LOAD_TASKS,\r\n        payload: response.data\r\n    });\r\n};\r\n\r\nexport const deleteTask = (taskId, nav) => async (dispatch) => {\r\n    await tasks.delete(`/tasks/${taskId}`);\r\n\r\n    dispatch({\r\n        type: DELETE_TASK,\r\n        payload: taskId\r\n    });\r\n\r\n    history.push(`/${nav}`);\r\n};\r\n\r\n","export const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const LOAD_TASKS = 'LOAD_TASKS';\r\nexport const EDIT_TASK = 'EDIT_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const TOGGLE_MENU = 'TOGGLE_MENU';\r\nexport const NAV_PAGE = 'NAV_PAGE';","import './InputBar.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport React from 'react';\r\n \r\n\r\nclass InputForm extends React.Component {\r\n   \r\n    onFormSubmit = (formValues) => {\r\n        this.props.onSubmit(formValues);\r\n    };\r\n\r\n    renderInput = ({ input }) => {\r\n        return (\r\n            <div className=\"input-bar ui segment\" style={{marginTop: '10px', marginLeft: 'auto', marginRight: 'auto', backgroundColor: 'black'}}>\r\n                <form onSubmit={this.props.handleSubmit(this.onFormSubmit)} className=\"ui form\" >\r\n                    <div className=\"field\">\r\n                        <input { ...input}\r\n                            placeholder=\"Type new task...\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        return (\r\n            <div>\r\n                <Field name=\"newTask\" component={this.renderInput} />\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\n\r\nexport default reduxForm({\r\n    form: 'inputForm'\r\n})(InputForm);\r\n\r\n\r\n","import './InputBar.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport { addTask } from '../actions';\r\nimport InputForm from './InputForm';\r\n\r\nclass InputBar extends React.Component {\r\n   \r\n    onSubmit = (formValues) => {\r\n        const newTask = {\r\n            content: formValues.newTask,\r\n            userId: this.props.userId,\r\n            isDone: false,\r\n            create_date: moment(new Date()).format('lll') \r\n        };\r\n        console.log(newTask);\r\n        this.props.addTask(newTask);\r\n    };\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        return (\r\n            <div>\r\n                <InputForm onSubmit={this.onSubmit} />\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps =(state) => {\r\n    return {\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, { addTask })(InputBar);\r\n","import './TaskItem.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm } from 'redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { editTask } from '../actions';\r\nimport InputForm from './InputForm';\r\n\r\n\r\nconst buttonConfig = {\r\n    done: {\r\n        color: 'green',\r\n        text: 'DONE'\r\n    },\r\n    pending: {\r\n        color: 'red',\r\n        text: 'PENDING'\r\n    }\r\n};\r\n\r\n\r\nclass TaskItem extends React.Component {\r\n    state = { isEditMode: false };\r\n\r\n    onClickStatus = (event) => {\r\n        const editedTask = {...this.props.task, isDone: !this.props.task.isDone};\r\n        this.props.editTask(this.props.task._id, editedTask);\r\n    };\r\n\r\n    onClickDeleteButton = (event) => {\r\n        this.props.onClick(this.props.task.id);\r\n    };\r\n\r\n    onClickEditButton = () => {\r\n        this.setState({ isEditMode: !this.state.isEditMode })\r\n    };\r\n\r\n    onSubmitUpdate = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.props.task.id, this.state.term);\r\n        this.setState({isEditMode: !this.state.isEditMode});\r\n    };\r\n\r\n    onSubmit = (formValues) => {\r\n        const editedTask = {...this.props.task, content: formValues.newTask};\r\n        this.props.editTask(this.props.task._id, editedTask);\r\n        this.setState({isEditMode: !this.state.isEditMode});\r\n    };\r\n\r\n    editWindowRendering = () => {\r\n        if(this.state.isEditMode) {\r\n            return (\r\n                <InputForm initialValues={{newTask: this.props.task.content}} onSubmit={this.onSubmit} />\r\n            );\r\n        } else {\r\n            return <div className=\"header\" style={{marginBottom: '10px'}}>{this.props.task.content}</div>\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { color, text } = buttonConfig[this.props.task.isDone ? 'done' : 'pending'];\r\n        return (\r\n            <div className=\"item-box item\" style={{marginBottom: '0px'}} >\r\n                <div className=\"content\">\r\n                    {this.editWindowRendering()}\r\n                    {this.props.task.create_date}\r\n                    \r\n                </div>\r\n                <div className=\"buttons\" >\r\n                    <button className={`button-status ui inverted ${color} button`} onClick={this.onClickStatus} >{text}</button>\r\n                    <button className=\"ui icon button\" onClick={this.onClickEditButton} ><i className=\"black edit outline icon\"></i></button>\r\n                    <Link to={`/delete/${this.props.task._id}`} className=\"ui icon button\" ><i className=\"black trash alternate outline icon\"></i></Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\n\r\nconst con = connect(null, { editTask })(TaskItem);\r\nexport default reduxForm({\r\n    form: 'editTask'\r\n})(con);","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h2 className=\"ui center aligned icon header\" style={{ marginTop: '5px'}} >\r\n            <i className=\"circular tasks icon\"></i>\r\n                YOUR TO DO LIST\r\n        </h2>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import './TaskList.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TaskItem from './TaskItem';\r\nimport Menu from './Menu';\r\nimport Header from './Header';\r\nimport InputBar from './InputBar';\r\nimport { setNavFlag } from '../actions';\r\n\r\n\r\nclass TaskListDone extends React.Component {\r\n    componentDidMount() {\r\n        this.props.setNavFlag(this.props.conf);\r\n    }\r\n    \r\n   renderTasks() {\r\n    if(this.props.tasks.length === 0) {\r\n        return 'You haven not done anything yet!';\r\n    } else {\r\n        return this.props.tasks.map((task) => {\r\n            if(task.isDone) {\r\n                return (\r\n                    <TaskItem\r\n                        task={task}\r\n                        key={task.id}\r\n                    />\r\n                );\r\n            }\r\n         });\r\n    }\r\n   }; \r\n    \r\n    render() {\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <InputBar />\r\n                <div className=\"task-list ui inverted segment\" style={{marginLeft: 'auto', marginRight: 'auto'}}>\r\n                    <div className=\"ui inverted relaxed divided list\">\r\n                        {this.renderTasks()}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps =(state) => {\r\n    return {\r\n        tasks: Object.values(state.tasks),\r\n        menu: state.menu\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setNavFlag })(TaskListDone);\r\n","import './TaskList.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TaskItem from './TaskItem';\r\nimport Menu from './Menu';\r\nimport Header from './Header';\r\nimport InputBar from './InputBar';\r\nimport { setNavFlag } from '../actions';\r\n\r\n\r\nclass TaskListPending extends React.Component {\r\n    componentDidMount() {\r\n        this.props.setNavFlag(this.props.conf);\r\n    }\r\n    \r\n   renderTasks() {\r\n    if(this.props.tasks.length === 0) {\r\n        return 'You haven not done anything yet!';\r\n    } else {\r\n        return this.props.tasks.map((task) => {\r\n            if(!task.isDone) {\r\n                return (\r\n                    <TaskItem\r\n                        task={task}\r\n                        key={task.id}\r\n                    />\r\n                );\r\n            }\r\n         });\r\n    }\r\n   }; \r\n    \r\n    render() {\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <InputBar />\r\n                <div className=\"task-list ui inverted segment\" style={{marginLeft: 'auto', marginRight: 'auto'}}>\r\n                    <div className=\"ui inverted relaxed divided list\">\r\n                        {this.renderTasks()}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps =(state) => {\r\n    return {\r\n        tasks: Object.values(state.tasks),\r\n        menu: state.menu\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setNavFlag })(TaskListPending);\r\n","import './GoogleAuth.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn, signOut, fetchTasks } from '../actions';\r\n\r\nclass GoogleAuth extends React.Component {\r\n    componentDidMount() {\r\n        window.gapi.load('client:auth2', () => {\r\n            window.gapi.client.init({\r\n                clientId: '424876389394-cliu35o07umhhtmaf6mr6nn4stmd5nvi.apps.googleusercontent.com',\r\n                scope: 'email'\r\n            }).then(() => {\r\n                this.auth = window.gapi.auth2.getAuthInstance();\r\n                this.onAuthChange(this.auth.isSignedIn.get())\r\n                this.auth.isSignedIn.listen(this.onAuthChange);\r\n            })\r\n        })\r\n    }\r\n\r\n    onAuthChange = (isSignedIn) => {\r\n        if(isSignedIn) {\r\n            this.props.signIn(this.auth.currentUser.get().getId());\r\n            this.props.fetchTasks(this.auth.currentUser.get().getId());\r\n        } else {\r\n            this.props.signOut();\r\n            console.log(this.props.userId);\r\n            this.props.fetchTasks(this.props.userId);\r\n        };\r\n    };\r\n\r\n    onSignInClick = () => {\r\n        this.auth.signIn();\r\n    };\r\n\r\n    onSignOutClick = () => {\r\n        this.auth.signOut();\r\n    };\r\n\r\n    renderAuthButton() {\r\n        if(this.props.isSignedIn === null) {\r\n            return null;\r\n        } else if(this.props.isSignedIn) {\r\n            return (\r\n                <div className=\"ui relaxed items\">\r\n                    <div className=\"item\" >\r\n                        <button onClick={this.onSignOutClick} className=\"ui red google button\" >\r\n                            <i className=\"google icon\" />\r\n                            Sign Out\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"ui relaxed items\">\r\n                    <div className=\"item\">\r\n                        <button onClick={this.onSignInClick} className=\"ui red google button\" >\r\n                            <i className=\"google icon\" />\r\n                            Sign In with Google\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        };\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.renderAuthButton()}\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isSignedIn: state.auth.isSignedIn,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { signIn, signOut, fetchTasks })(GoogleAuth);\r\n","import './Menu.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { toggleMenu } from '../actions';\r\nimport Header from './Header';\r\nimport App from './App';\r\nimport TaskList from './TaskList';\r\nimport TaskListDone from './TaskListDone';\r\nimport TaskListPending from './TaskListPending';\r\nimport GoogleAuth from './GoogleAuth';\r\n\r\nlet menuConfig = {\r\n    clicked: {\r\n        visible: 'visible',\r\n        dimmed: 'dimmed'\r\n    },\r\n    notClicked: {\r\n        visible: \"\",\r\n        dimmed: \"\"\r\n    }\r\n};\r\n\r\n\r\nclass Menu extends React.Component {\r\n    onMenuClick =(nr) => {\r\n        this.props.toggleMenu();\r\n\r\n        \r\n    };\r\n\r\n    renderList = () => {\r\n        const conf = this.props.match.params.conf;\r\n        console.log(conf);\r\n        if(conf === '0') {\r\n            return <TaskList conf='0' />\r\n        } else if(conf === '1') {\r\n            return <TaskListDone conf='1' />\r\n        } else if(conf === '2') {\r\n            return <TaskListPending conf='2' />\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { visible, dimmed } = this.props.menu ? menuConfig.clicked : menuConfig.notClicked;\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"ui grid\">\r\n                    \r\n                        <div className=\"three wide column\" id=\"menu\" >\r\n                            <div onClick={() => this.onMenuClick(0)} className=\"ui menu\">\r\n                                <a id=\"mobile_item\" className=\"item\"><i className=\"bars icon\"></i></a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"five wide column\" > </div>\r\n                        <div className=\"eight wide column\" id=\"google-button\" >\r\n                            <GoogleAuth />\r\n                        </div>\r\n                    \r\n                </div>\r\n                <div className=\"ui pushable segment\">\r\n                    <div className={`ui vertical inverted sidebar labeled icon menu ${visible}`}>\r\n                        <Link to=\"/0\" onClick={() => this.onMenuClick(1)} className=\"item\">\r\n                            <i className=\"circular tasks icon\"></i>\r\n                            All\r\n                        </Link>\r\n                        <Link to=\"/1\" onClick={() => this.onMenuClick(2)} className=\"item\">\r\n                            <i className=\"check icon\"></i>\r\n                            Done\r\n                        </Link>\r\n                        <Link to=\"/2\" onClick={() => this.onMenuClick(3)} className=\"item\">\r\n                            <i className=\"bell icon\"></i>\r\n                            Pending\r\n                        </Link>\r\n                    </div>\r\n                    <div className={`${this.props.menu ? 'dimmed' : ''} pusher`}>\r\n                        <Header />\r\n                        {this.renderList()}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        menu: state.menu\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { toggleMenu })(Menu);","import './TaskList.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TaskItem from './TaskItem';\r\nimport Menu from './Menu';\r\nimport Header from './Header';\r\nimport InputBar from './InputBar';\r\nimport { setNavFlag } from '../actions';\r\n\r\n\r\n\r\nclass TaskList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.setNavFlag(this.props.conf);\r\n    }\r\n    \r\n   renderTasks() {\r\n       if(!this.props.isSignedIn) {\r\n        return 'Please Sign In to fetch your tasks.'\r\n       } else {\r\n           if(this.props.tasks.length === 0) {\r\n               return 'Relax! You have nothing to do right now.';\r\n           } else {\r\n               return this.props.tasks.map((task) => {\r\n                    return (\r\n                        <TaskItem\r\n                            task={task}\r\n                            key={task._id}\r\n                        />\r\n                    );\r\n                });\r\n           }\r\n       }\r\n   }; \r\n    \r\n    render() {\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <InputBar />\r\n                <div className=\"task-list ui inverted segment\" style={{marginLeft: 'auto', marginRight: 'auto'}}>\r\n                    <div className=\"ui inverted relaxed divided list\">\r\n                        {this.renderTasks()}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps =(state) => {\r\n    return {\r\n        tasks: Object.values(state.tasks),\r\n        menu: state.menu,\r\n        isSignedIn: state.auth.isSignedIn\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setNavFlag })(TaskList);\r\n","import './LoginPage.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport GoogleAuth from './GoogleAuth';\r\nimport Header from './Header';\r\nimport history from '../history';\r\n\r\nclass LoginPage extends React.Component {\r\n    renderLoginPage() {\r\n        if(this.props.isSignedIn) {\r\n            this.props.history.push('/0');\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Header />\r\n                    <div className=\"ui center aligned container space\">\r\n                        <p>Welcam in Your TODO List! Please Sign In with Google to fetch your tasks.</p>\r\n                    </div>\r\n                    <div className=\"card\">\r\n                        <div className=\"ui bottom attached black button\">\r\n                            <GoogleAuth />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.renderLoginPage()}\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isSignedIn: state.auth.isSignedIn\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(LoginPage);\r\n","import React from 'react';\r\nimport './FilterMenu.css';\r\n\r\nclass FilterMenu extends React.Component {\r\n    state = { isFilterClick: false };\r\n\r\n    onClickFilterButton = () => {\r\n        this.setState({ isFilterClick: !this.state.isFilterClick });\r\n    };\r\n\r\n    onClickAllTasks = () => {\r\n        this.props.filterTasks('all');\r\n        this.setState({ isFilterClick: !this.state.isFilterClick });\r\n    };\r\n\r\n    onClickPendingTasks = () => {\r\n        this.props.filterTasks('pending');\r\n        this.setState({ isFilterClick: !this.state.isFilterClick });\r\n    };\r\n\r\n    onClickDoneTasks = () => {\r\n        this.props.filterTasks('done');\r\n        this.setState({ isFilterClick: !this.state.isFilterClick });\r\n    };\r\n\r\n    menuRender = () => {\r\n        if(this.state.isFilterClick) {\r\n            return (\r\n                <div className=\"filter-menu ui inverted vertical menu\">\r\n                    <a className=\"item\" onClick={this.onClickAllTasks}>ALL</a>\r\n                    <a className=\"item\" onClick={this.onClickPendingTasks}>PENDING</a>\r\n                    <a className=\"item\" onClick={this.onClickDoneTasks}>DONE</a>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"filter-button\">\r\n                    <button className=\"ui icon button\" onClick={this.onClickFilterButton} >\r\n                        <i className=\"filter icon\"></i>\r\n                    </button>\r\n                </div>\r\n                {this.menuRender()}\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default FilterMenu;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Modal = (props) => {\r\n    return ReactDOM.createPortal(\r\n        <div onClick={props.onDismiss} className=\"ui dimmer modals visible active\">\r\n            <div onClick={(e) => e.stopPropagation()} className=\"ui standard modal visible active\">\r\n                <div className=\"header\">{props.title}</div>\r\n                <div className=\"content\">{props.content}</div>\r\n                <div className=\"actions\">{props.actions}</div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector('#modal')\r\n    );\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\nimport Modal from './Modal';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport history from '../history';\r\nimport { deleteTask } from \"../actions\";\r\n\r\nclass TaskDelete extends React.Component {\r\n    renderActions() {\r\n        const { id } = this.props.match.params;\r\n        const nav = this.props.nav;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <button onClick={() => this.props.deleteTask(id, nav)} className=\"ui primary button\">Delete</button>\r\n                <Link to={`/${nav}`} className=\"ui button\">Cancel</Link>\r\n            </React.Fragment>\r\n        );\r\n    }; \r\n\r\n    render() {\r\n        return (\r\n            <Modal \r\n            title=\"Delete Task\"\r\n            content=\"Are you sure you want to delete this task?\"\r\n            actions={this.renderActions()}\r\n            onDismiss={() => this.props.history.push(`/${this.props.nav}`)}\r\n            />\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        nav: state.nav\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { deleteTask })(TaskDelete);","import React from 'react';\r\nimport { HashRouter, Router, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { fetchTasks } from '../actions';\r\nimport InputBar from './InputBar';\r\nimport TaskList from './TaskList';\r\nimport Header from './Header';\r\nimport FilterMenu from './FilterMenu';\r\nimport LoginPage from './LoginPage';\r\nimport Modal from './Modal';\r\nimport history from '../history';\r\nimport TaskDelete from './TaskDelete';\r\nimport Menu from './Menu';\r\nimport TaskListDone from './TaskListDone';\r\n\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchTasks(this.props.userId);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <HashRouter history={history}>\r\n                    <div>\r\n                        <Route path=\"/\" exact component={LoginPage} />\r\n                        <Route path=\"/:conf\" exact component={Menu} />\r\n                        <Route path=\"/delete/:id\" exact component={TaskDelete} />\r\n                        <Route path=\"/done\" exact component={TaskListDone} />\r\n                    </div>\r\n                </HashRouter>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.auth.userId\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchTasks })(App);\r\n","import { SIGN_IN, SIGN_OUT } from \"../actions/type\";\r\n\r\nexport default (state={}, action) => {\r\n    switch (action.type) {\r\n        case SIGN_IN:\r\n            return { ...state, isSignedIn: true, userId: action.payload }\r\n        case SIGN_OUT:\r\n            return { ...state, isSignedIn: false, userId: null }\r\n        default:\r\n            return state;\r\n    };\r\n};","import { ADD_TASK, LOAD_TASKS, EDIT_TASK, DELETE_TASK, SIGN_OUT } from \"../actions/type\";\r\nimport _ from 'lodash';\r\n\r\nexport default (state={}, action) => {\r\n    switch (action.type) {\r\n        case ADD_TASK:\r\n            return { ...state, [action.payload._id]: action.payload };\r\n        case LOAD_TASKS:\r\n            return { ...state, ..._.mapKeys(action.payload, '_id')};\r\n        case EDIT_TASK:\r\n            return { ...state, [action.payload._id]: action.payload };\r\n        case DELETE_TASK:\r\n            return _.omit(state, action.payload);\r\n        case SIGN_OUT:\r\n            return {}\r\n        default:\r\n            return state;\r\n    };\r\n};","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport authReducer from './authReducer';\r\nimport tasksReducer from './tasksReducer';\r\nimport { ADD_TASK } from '../actions/type';\r\nimport menuReducer from './menuReducer';\r\nimport navReducer from './navReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    tasks: tasksReducer,\r\n    menu: menuReducer,\r\n    nav: navReducer,\r\n    form: formReducer.plugin({\r\n        inputForm: (state, action) => {\r\n            switch (action.type) {\r\n                case ADD_TASK:\r\n                    return undefined;\r\n                default:\r\n                    return state;\r\n            };\r\n        }\r\n    })\r\n});\r\n","import { TOGGLE_MENU } from \"../actions/type\";\r\n\r\nexport default (state=false, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_MENU:\r\n            let newState = state;\r\n            return !newState;\r\n        default:\r\n            return state;\r\n    };\r\n};","import { NAV_PAGE } from \"../actions/type\";\r\n\r\nexport default (state=0, action) => {\r\n    switch (action.type) {\r\n        case NAV_PAGE:\r\n            let newState = state;\r\n            return newState = action.payload;\r\n        default:\r\n            return state;\r\n    };\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\nimport Menu from './components/Menu';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(reduxThunk))    \r\n);\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store} >\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}